/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeltAttributes,
  DeltAttributesInterface,
} from "../../contracts/DeltAttributes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "awarded",
            type: "bool",
          },
          {
            internalType: "string",
            name: "itemName",
            type: "string",
          },
          {
            internalType: "string",
            name: "itemType",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lvl",
            type: "uint256",
          },
        ],
        internalType: "struct DeltAttributes.Id",
        name: "_itemId",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "encodedSVG",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "attrKey",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "statKey",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "tier",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "trait",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct DeltAttributes.Stat[]",
            name: "stats",
            type: "tuple[]",
          },
        ],
        internalType: "struct DeltAttributes.Attr[]",
        name: "_attributes",
        type: "tuple[]",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61115861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063428392a71461003a575b600080fd5b61004d610048366004610a57565b610063565b60405161005a9190610e32565b60405180910390f35b60606100b98460400151856060015161007f87608001516100e1565b61008887610209565b610091876103bd565b6040516020016100a5959493929190610cea565b604051602081830303815290604052610642565b6040516020016100c99190610ded565b60405160208183030381529060405290509392505050565b6060816101055750506040805180820190915260018152600360fc1b602082015290565b8160005b811561012f578061011981610fdb565b91506101289050600a83610f61565b9150610109565b6000816001600160401b038111156101495761014961104c565b6040519080825280601f01601f191660200182016040528015610173576020820181803683370190505b509050815b851561020057610189600182610f94565b90506000610198600a88610f61565b6101a390600a610f75565b6101ad9088610f94565b6101b8906030610f3c565b905060008160f81b9050808484815181106101d5576101d5611036565b60200101906001600160f81b031916908160001a9053506101f7600a89610f61565b97505050610178565b50949350505050565b8051606090829061022a575050604080516000815260208101909152919050565b600481516102389190610ff6565b156102895760405162461bcd60e51b815260206004820152601c60248201527f696e76616c696420626173653634206465636f64657220696e70757400000000604482015260640160405180910390fd5b60006040518060a00160405280608081526020016110a36080913990506000600483516102b69190610f61565b6102c1906003610f75565b905060006102d0826020610f24565b6001600160401b038111156102e7576102e761104c565b6040519080825280601f01601f191660200182016040528015610311576020820181803683370190505b5090508351840151603d60ff8216141561034057600183039250613d3d61ffff82161415610340576001830392505b50818152600183018485518101602084015b818310156103af57600483019250825160ff8082168601511660ff808360081c168701511660061b0160ff808360101c1687015116600c1b60ff808460181c168801511660121b010190508060e81b825250600381019050610352565b509298975050505050505050565b60408051602081019091526000808252606091905b835181101561063b57818482815181106103ee576103ee611036565b60200260200101516000015160405160200161040b929190610c51565b604051602081830303815290604052915060005b84828151811061043157610431611036565b602002602001015160200151518110156105ce578285838151811061045857610458611036565b602002602001015160200151828151811061047557610475611036565b60200260200101516000015186848151811061049357610493611036565b60200260200101516020015183815181106104b0576104b0611036565b6020026020010151604001516104ff8886815181106104d1576104d1611036565b60200260200101516020015185815181106104ee576104ee611036565b6020026020010151602001516100e1565b61054289878151811061051457610514611036565b602002602001015160200151868151811061053157610531611036565b6020026020010151606001516100e1565b604051602001610556959493929190610b7a565b6040516020818303038152906040529250600185838151811061057b5761057b611036565b602002602001015160200151516105929190610f94565b8110156105bc57826040516020016105aa9190610cc4565b60405160208183030381529060405292505b806105c681610fdb565b91505061041f565b50816040516020016105e09190610c9f565b6040516020818303038152906040529150600184516105ff9190610f94565b81101561062957816040516020016106179190610cc4565b60405160208183030381529060405291505b8061063381610fdb565b9150506103d2565b5092915050565b606081516000141561066257505060408051602081019091526000815290565b600060405180606001604052806040815260200161106360409139905060006003845160026106919190610f24565b61069b9190610f61565b6106a6906004610f75565b905060006106b5826020610f24565b6001600160401b038111156106cc576106cc61104c565b6040519080825280601f01601f1916602001820160405280156106f6576020820181803683370190505b509050818152600183018586518101602084015b81831015610762576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182535060010161070a565b60038951066001811461077c576002811461078d57610799565b613d3d60f01b600119830152610799565b603d60f81b6000198301525b509398975050505050505050565b600082601f8301126107b857600080fd5b6107ca6107c58335610f01565b610ed1565b808335825260208201915060208401856020863560051b87010111156107ef57600080fd5b60005b85358110156109dd576001600160401b038235111561081057600080fd5b6040823587018803601f1901121561082757600080fd5b61082f610e65565b6001600160401b036020843589010135111561084a57600080fd5b61085f88602085358a018181013501016109e8565b81526001600160401b036040843589010135111561087c57600080fd5b82358701604081013501603f01881361089457600080fd5b6108ad6107c58435890160408101350160200135610f01565b6020604085358a0181810135018281013580855292840193928183019260059190911b909101018b10156108e057600080fd5b60005b86358b01604081013501602001358110156109bd576001600160401b038235111561090d57600080fd5b86358b016040810135018235016080818e03603f1901121561092e57600080fd5b610936610e8d565b6001600160401b036040830135111561094e57600080fd5b6109608e6040808501358501016109e8565b8152606082013560208201526001600160401b036080830135111561098457600080fd5b6109978e604060808501358501016109e8565b604082015260a091909101356060820152845260209384019391909101906001016108e3565b5050602083810191909152918652509384019391909101906001016107f2565b509095945050505050565b600082601f8301126109f957600080fd5b81356001600160401b03811115610a1257610a1261104c565b610a25601f8201601f1916602001610ed1565b818152846020838601011115610a3a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610a6c57600080fd5b83356001600160401b0380821115610a8357600080fd5b9085019060a08288031215610a9757600080fd5b610a9f610eaf565b8235815260208301358015158114610ab657600080fd5b6020820152604083013582811115610acd57600080fd5b610ad9898286016109e8565b604083015250606083013582811115610af157600080fd5b610afd898286016109e8565b60608301525060808301356080820152809550506020860135915080821115610b2557600080fd5b610b31878388016109e8565b93506040860135915080821115610b4757600080fd5b50610b54868287016107a7565b9150509250925092565b60008151610b70818560208601610fab565b9290920192915050565b60008651610b8c818460208b01610fab565b601160f91b9083019081528651610baa816001840160208b01610fab565b6e111d10103d913a3930b4ba111d101160891b600192909101918201528551610bda816010840160208a01610fab565b6b011161010113a34b2b9111d160a51b601092909101918201528451610c0781601c840160208901610fab565b6b0161010113b30b63ab2911d160a51b601c92909101918201528351610c34816028840160208801610fab565b607d60f81b60289290910191820152602901979650505050505050565b60008351610c63818460208801610fab565b601160f91b9083019081528351610c81816001840160208801610fab565b64223a20207b60d81b60019290910191820152600601949350505050565b60008251610cb1818460208701610fab565b607d60f81b920191825250600101919050565b60008251610cd6818460208701610fab565b61016160f51b920191825250600201919050565b693d913730b6b2911d101160b11b81528551600090610d1081600a850160208b01610fab565b6c11161010113a3cb832911d101160991b600a918401918201528651610d3d816017840160208b01610fab565b6c011161010113632bb32b6111d1609d1b601792909101918201528551610d6b816024840160208a01610fab565b6c1610101134b6b0b3b2911d101160991b602492909101918201528451610d99816031840160208901610fab565b630111610160e51b603192909101918201526e2261747472696275746573223a207b60881b6035820152610de1610dd36044830186610b5e565b617d7d60f01b815260020190565b98975050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610e2581601d850160208701610fab565b91909101601d0192915050565b6020815260008251806020840152610e51816040850160208701610fab565b601f01601f19169190910160400192915050565b604080519081016001600160401b0381118282101715610e8757610e8761104c565b60405290565b604051608081016001600160401b0381118282101715610e8757610e8761104c565b60405160a081016001600160401b0381118282101715610e8757610e8761104c565b604051601f8201601f191681016001600160401b0381118282101715610ef957610ef961104c565b604052919050565b60006001600160401b03821115610f1a57610f1a61104c565b5060051b60200190565b60008219821115610f3757610f3761100a565b500190565b600060ff821660ff84168060ff03821115610f5957610f5961100a565b019392505050565b600082610f7057610f70611020565b500490565b6000816000190483118215151615610f8f57610f8f61100a565b500290565b600082821015610fa657610fa661100a565b500390565b60005b83811015610fc6578181015183820152602001610fae565b83811115610fd5576000848401525b50505050565b6000600019821415610fef57610fef61100a565b5060010190565b60008261100557611005611020565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000a26469706673582212206a986cfe2ed4abea8074bd9124c106d6dfd1fe8c72a99c811d11dd0826a3b8de64736f6c63430008070033";

type DeltAttributesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeltAttributesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeltAttributes__factory extends ContractFactory {
  constructor(...args: DeltAttributesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeltAttributes> {
    return super.deploy(overrides || {}) as Promise<DeltAttributes>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeltAttributes {
    return super.attach(address) as DeltAttributes;
  }
  override connect(signer: Signer): DeltAttributes__factory {
    return super.connect(signer) as DeltAttributes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeltAttributesInterface {
    return new utils.Interface(_abi) as DeltAttributesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeltAttributes {
    return new Contract(address, _abi, signerOrProvider) as DeltAttributes;
  }
}
