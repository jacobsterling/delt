/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeltTrader,
  DeltTraderInterface,
} from "../../contracts/DeltTrader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
    ],
    name: "AuctionEnd",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endAt",
        type: "uint256",
      },
    ],
    name: "AuctionStart",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeAuctions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_auction",
        type: "bool",
      },
    ],
    name: "addListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "endAuction",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getListings",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "auctioned",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
        ],
        internalType: "struct DeltTrader.Transaction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isAuctioned",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "removeListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "auctioned",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "destAddr",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516119c83803806119c883398101604081905261002f91610054565b600480546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611935806100936000396000f3fe6080604052600436106100dc5760003560e01c8063748581141161007f578063b9a2de3a11610059578063b9a2de3a146102f4578063e75722301461032c578063eb8752e21461034c578063fcce48831461036c57600080fd5b80637485811414610267578063790d859614610294578063b5cb00ec146102d457600080fd5b8063479ad4c3116100bb578063479ad4c3146101565780634eaf9db614610176578063571a26a0146101cd578063745407b51461025457600080fd5b8062f714ce146100e157806327e235e314610103578063454a2ab314610143575b600080fd5b3480156100ed57600080fd5b506101016100fc3660046116fb565b61038c565b005b34801561010f57600080fd5b5061013061011e366004611684565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6101016101513660046116e2565b610450565b34801561016257600080fd5b506101016101713660046116e2565b610656565b34801561018257600080fd5b5061019661019136600461172b565b6108b6565b604080516001600160a01b03968716815295909416602086015292840191909152151560608301521515608082015260a00161013a565b3480156101d957600080fd5b5061021f6101e83660046116e2565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b039384169391929091169084565b60405161013a94939291906001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b6101016102623660046116e2565b610914565b34801561027357600080fd5b506102876102823660046116e2565b610ba0565b60405161013a9190611786565b3480156102a057600080fd5b506102c46102af3660046116e2565b60026020526000908152604090205460ff1681565b604051901515815260200161013a565b3480156102e057600080fd5b506102c46102ef3660046116e2565b610c4e565b34801561030057600080fd5b5061031461030f3660046116e2565b610c8b565b6040516001600160a01b03909116815260200161013a565b34801561033857600080fd5b506101306103473660046116e2565b6111a3565b34801561035857600080fd5b5061010161036736600461174d565b6112cc565b34801561037857600080fd5b506102c46103873660046116e2565b611500565b336000908152600360205260409020548211156103e45760405162461bcd60e51b8152602060048201526011602482015270696e737566666963656e742066756e647360781b60448201526064015b60405180910390fd5b33600090815260036020526040808220805490839055905190916001600160a01b0384169185156108fc0291869190818181858888f19350505050158015610430573d6000803e3d6000fd5b5061043b8382611880565b33600090815260036020526040902055505050565b60008181526002602052604090205460ff166104a65760405162461bcd60e51b815260206004820152601560248201527461756374696f6e206973206e6f742061637469766560581b60448201526064016103db565b6000818152600160205260409020546001600160a01b03163314156105065760405162461bcd60e51b815260206004820152601660248201527536bab9ba103737ba1037bbb7103a3432903a37b5b2b760511b60448201526064016103db565b6000818152600160208190526040909120015434116105725760405162461bcd60e51b815260206004820152602260248201527f6d75737420706179206d6f7265207468616e20746865206869676865737420626044820152611a5960f21b60648201526084016103db565b600081815260016020526040902080546002909101546001600160a01b039081169116146105de576000818152600160208181526040808420928301546002909301546001600160a01b03168452600390915282208054919290916105d8908490611868565b90915550505b6000818152600160208181526040928390203492810183905560020180546001600160a01b0319163317905560045483516001600160a01b039091168152908101849052918201527fdf8644c0a4c21ed214ce69f395675b3a5fcd1039083daea5058898de40ea31499060600160405180910390a150565b600480546040516331a9108f60e11b81529182018390526001600160a01b03169033908290636352211e9060240160206040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d491906116a8565b6001600160a01b0316146106fa5760405162461bcd60e51b81526004016103db90611831565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c59060440160206040518083038186803b15801561073f57600080fd5b505afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077791906116c5565b6107bf5760405162461bcd60e51b815260206004820152601960248201527818dbdb9d1c9858dd081b5d5cdd08189948185c1c1c9bdd9959603a1b60448201526064016103db565b600082815260208190526040902080546107db90600190611880565b815481106107eb576107eb6118c3565b906000526020600020906004020160030160019054906101000a900460ff161561084f5760405162461bcd60e51b81526020600482015260156024820152741d1c985b9cd858dd1a5bdb8818dbdb5c1b195d1959605a1b60448201526064016103db565b600082815260208190526040902080548061086c5761086c6118ad565b60008281526020812060046000199093019283020180546001600160a01b0319908116825560018201805490911690556002810191909155600301805461ffff1916905590555050565b600060205281600052604060002081815481106108d257600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b0392831695509116925060ff8082169161010090041685565b60008181526020819052604090205461093f5760405162461bcd60e51b81526004016103db90611804565b6000818152602081905260408120805461095b90600190611880565b8154811061096b5761096b6118c3565b60009182526020918290206040805160a081018252600490930290910180546001600160a01b0390811684526001820154169383019390935260028301549082015260039091015460ff808216151560608401526101009091041615801560808301529091506109ed5760405162461bcd60e51b81526004016103db90611804565b8060400151341015610a415760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742066756e64732073656e7400000000000000000060448201526064016103db565b6020808201516001600160a01b031660009081526003909152604081208054349290610a6e908490611868565b9091555050600480546020830151604051632142170760e11b81526001600160a01b039182169381019390935233602484015260448301859052169081906342842e0e90606401600060405180830381600087803b158015610acf57600080fd5b505af1158015610ae3573d6000803e3d6000fd5b50505060008481526020819052604090208054339250610b0590600190611880565b81548110610b1557610b156118c3565b6000918252602080832060049290920290910180546001600160a01b0319166001600160a01b0394909416939093179092558481529081905260409020805460019190610b63908390611880565b81548110610b7357610b736118c3565b906000526020600020906004020160030160016101000a81548160ff021916908315150217905550505050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b82821015610c435760008481526020908190206040805160a0810182526004860290920180546001600160a01b039081168452600180830154909116848601526002820154928401929092526003015460ff8082161515606085015261010090910416151560808301529083529092019101610bcc565b505050509050919050565b6000610c5982611500565b610c755760405162461bcd60e51b81526004016103db90611804565b5060009081526002602052604090205460ff1690565b60008181526002602052604081205460ff16610ce95760405162461bcd60e51b815260206004820152601f60248201527f61756374696f6e20666f7220746f6b656e206973206e6f74206163746976650060448201526064016103db565b6000828152600160205260409020546001600160a01b03163314610d445760405162461bcd60e51b815260206004820152601260248201527136bab9ba1037bbb7103a3432903a37b5b2b760711b60448201526064016103db565b600082815260016020526040902080546002909101546001600160a01b0390811691161415610dd5576000828152602081905260409020805480610d8a57610d8a6118ad565b60008281526020812060046000199093019283020180546001600160a01b0319908116825560018201805490911690556002810191909155600301805461ffff1916905590556110ea565b6000828152602081905260409020805460019190610df4908390611880565b81548110610e0457610e046118c3565b6000918252602080832060036004909302019190910180549315156101000261ff00199094169390931790925583815260018083526040808320600201549383905290912080546001600160a01b03909316929091610e6291611880565b81548110610e7257610e726118c3565b6000918252602080832060049290920290910180546001600160a01b0319166001600160a01b039490941693909317909255838152600180835260408083208201549383905290912080549091610ec891611880565b81548110610ed857610ed86118c3565b60009182526020808320600492830201600290810194909455905485835260018083526040808520958601546001600160a01b0390811686526003855290852054948890529281905293909301549216911115610f6b5760405162461bcd60e51b8152602060048201526011602482015270696e737566666963656e742066756e647360781b60448201526064016103db565b600083815260016020526040908190205490516331a9108f60e11b8152600481018590526001600160a01b0391821691831690636352211e9060240160206040518083038186803b158015610fbf57600080fd5b505afa158015610fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff791906116a8565b6001600160a01b03161461101d5760405162461bcd60e51b81526004016103db90611831565b6000838152600160208190526040808320805492015490516001600160a01b039092169281156108fc029290818181858888f19350505050158015611066573d6000803e3d6000fd5b506000838152600160205260409081902080546002909101549151632142170760e11b81526001600160a01b0391821660048201529181166024830152604482018590528216906342842e0e90606401600060405180830381600087803b1580156110d057600080fd5b505af11580156110e4573d6000803e3d6000fd5b50505050505b6000828152600260208181526040808420805460ff19169055600180835281852080546001600160a01b0319908116825591810186905593840180549091169055600390920183905560045482516001600160a01b0390911681529081018590528082018390526060810192909252517f6077d5daa03b2cdc6853f63799807cb5ba9521d89b199c4050a463f60b99e8df9181900360800190a1506000908152600160205260409020600201546001600160a01b031690565b600081815260208190526040812080546111bf90600190611880565b815481106111cf576111cf6118c3565b906000526020600020906004020160030160019054906101000a900460ff16156112285760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016103db565b6000828152602081905260409020805461124490600190611880565b81548110611254576112546118c3565b600091825260209091206003600490920201015460ff161561128757506000908152600160208190526040909120015490565b600082815260208190526040902080546112a390600190611880565b815481106112b3576112b36118c3565b9060005260206000209060040201600201549050919050565b600480546040516331a9108f60e11b81529182018590526001600160a01b03169033908290636352211e9060240160206040518083038186803b15801561131257600080fd5b505afa158015611326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134a91906116a8565b6001600160a01b0316146113705760405162461bcd60e51b81526004016103db90611831565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c59060440160206040518083038186803b1580156113b557600080fd5b505afa1580156113c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ed91906116c5565b6114355760405162461bcd60e51b815260206004820152601960248201527818dbdb9d1c9858dd081b5d5cdd08189948185c1c1c9bdd9959603a1b60448201526064016103db565b6040805160a08101825230815233602080830191825282840187815286158015606086019081526000608087018181528c825281865297812080546001818101835591835295909120875160049096020180546001600160a01b039687166001600160a01b03199182161782559651918101805492909616919096161790935590516002840155905160039092018054945115156101000261ff00199315159390931661ffff199095169490941791909117909255906114f9576114f9858261154f565b5050505050565b6000818152602081905260408120805461151c90600190611880565b8154811061152c5761152c6118c3565b6000918252602090912060049091020160030154610100900460ff161592915050565b60008281526002602052604090205460ff16156115ae5760405162461bcd60e51b815260206004820152601960248201527f61756374696f6e20697320616c7265616479206163746976650000000000000060448201526064016103db565b60006115bd4262015180611868565b602083810180516000878152600180855260409182902080546001600160a01b03199081166001600160a01b03958616178255838a01519282018390559451600290910180549095169084161790935560045481519216825292810187905291820152606081018290529091507f323971aba44fdb3378df3f4d54cad741c4c49c76f9d5cb459dd61cc483607ad39060800160405180910390a1600092835260016020818152604080862060030193909355600290529220805460ff191690921790915550565b60006020828403121561169657600080fd5b81356116a1816118d9565b9392505050565b6000602082840312156116ba57600080fd5b81516116a1816118d9565b6000602082840312156116d757600080fd5b81516116a1816118f1565b6000602082840312156116f457600080fd5b5035919050565b6000806040838503121561170e57600080fd5b823591506020830135611720816118d9565b809150509250929050565b6000806040838503121561173e57600080fd5b50508035926020909101359150565b60008060006060848603121561176257600080fd5b8335925060208401359150604084013561177b816118f1565b809150509250925092565b602080825282518282018190526000919060409081850190868401855b828110156117f757815180516001600160a01b039081168652878201511687860152858101518686015260608082015115159086015260809081015115159085015260a090930192908501906001016117a3565b5091979650505050505050565b6020808252601390820152721d1bdad95b881a5cc81b9bdd081b1a5cdd1959606a1b604082015260600190565b6020808252601b908201527f63616c6c6572206d757374206f776e20676976656e20746f6b656e0000000000604082015260600190565b6000821982111561187b5761187b611897565b500190565b60008282101561189257611892611897565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146118ee57600080fd5b50565b80151581146118ee57600080fdfea2646970667358221220f576e33f70eefc90629d952023c383ba043371d24318a738811e89271ff18a0b64736f6c63430008070033";

type DeltTraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeltTraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeltTrader__factory extends ContractFactory {
  constructor(...args: DeltTraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _contractAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeltTrader> {
    return super.deploy(_contractAddr, overrides || {}) as Promise<DeltTrader>;
  }
  override getDeployTransaction(
    _contractAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contractAddr, overrides || {});
  }
  override attach(address: string): DeltTrader {
    return super.attach(address) as DeltTrader;
  }
  override connect(signer: Signer): DeltTrader__factory {
    return super.connect(signer) as DeltTrader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeltTraderInterface {
    return new utils.Interface(_abi) as DeltTraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeltTrader {
    return new Contract(address, _abi, signerOrProvider) as DeltTrader;
  }
}
