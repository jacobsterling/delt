/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeltTrader,
  DeltTraderInterface,
} from "../../contracts/DeltTrader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
    ],
    name: "AuctionEnd",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endAt",
        type: "uint256",
      },
    ],
    name: "AuctionStart",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeAuctions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_auction",
        type: "bool",
      },
    ],
    name: "addListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getListings",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "auctioned",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
        ],
        internalType: "struct DeltTrader.Transaction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "removeListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "auctioned",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161186638038061186683398101604081905261002f91610059565b6001600055600580546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b6117ce806100986000396000f3fe60806040526004361061009c5760003560e01c8063571a26a011610064578063571a26a01461018d578063745407b5146102135780637485811414610226578063790d859614610253578063b9a2de3a14610293578063eb8752e2146102b357600080fd5b806327e235e3146100a15780632e1a7d4d146100e1578063454a2ab314610103578063479ad4c3146101165780634eaf9db614610136575b600080fd5b3480156100ad57600080fd5b506100ce6100bc36600461154d565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156100ed57600080fd5b506101016100fc3660046115ab565b6102d3565b005b6101016101113660046115ab565b6103a2565b34801561012257600080fd5b506101016101313660046115ab565b610705565b34801561014257600080fd5b506101566101513660046115c4565b61092f565b604080516001600160a01b03968716815295909416602086015292840191909152151560608301521515608082015260a0016100d8565b34801561019957600080fd5b506101de6101a83660046115ab565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0391821693929091169084565b6040516100d894939291906001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b6101016102213660046115ab565b61098d565b34801561023257600080fd5b506102466102413660046115ab565b610ce1565b6040516100d8919061161f565b34801561025f57600080fd5b5061028361026e3660046115ab565b60036020526000908152604090205460ff1681565b60405190151581526020016100d8565b34801561029f57600080fd5b506101016102ae3660046115ab565b610d98565b3480156102bf57600080fd5b506101016102ce3660046115e6565b611168565b600260005414156102ff5760405162461bcd60e51b81526004016102f6906116ca565b60405180910390fd5b60026000908155338152600460205260409020548111156103565760405162461bcd60e51b8152602060048201526011602482015270696e737566666963656e742066756e647360781b60448201526064016102f6565b604051339082156108fc029083906000818181858888f19350505050158015610383573d6000803e3d6000fd5b5033600090815260046020526040812080549290920390915560019055565b600260005414156103c55760405162461bcd60e51b81526004016102f6906116ca565b600260005580600160008281526001602052604090205415610450576000828152600160208190526040909120805490916103ff91611719565b8154811061040f5761040f61175c565b906000526020600020906004020160030160019054906101000a900460ff161561044b5760405162461bcd60e51b81526004016102f69061169d565b610468565b60405162461bcd60e51b81526004016102f69061169d565b82600160008281526003602052604090205460ff166104c95760405162461bcd60e51b815260206004820152601f60248201527f61756374696f6e20666f7220746f6b656e206973206e6f74206163746976650060448201526064016102f6565b6000858152600260205260409020546001600160a01b03163314156105295760405162461bcd60e51b815260206004820152601660248201527536bab9ba103737ba1037bbb7103a3432903a37b5b2b760511b60448201526064016102f6565b60008581526002602052604090206001015434116105945760405162461bcd60e51b815260206004820152602260248201527f6d75737420706179206d6f7265207468616e20746865206869676865737420626044820152611a5960f21b60648201526084016102f6565b600085815260026020819052604090912080549101546001600160a01b039081169116146105f057600085815260026020818152604080842060018101549301546001600160a01b031684526004909152909120805490910190555b60008581526002602090815260408083203460019182018190559252909120805460001981019081106106255761062561175c565b600091825260208083206002600490930201820193909355878252808352604080832090910180546001600160a01b0319163390811790915560019384905291208054919290916106769190611719565b815481106106865761068661175c565b600091825260209182902060049091020180546001600160a01b0319166001600160a01b039384161790556005546040805191909316815290810187905234918101919091527fdf8644c0a4c21ed214ce69f395675b3a5fcd1039083daea5058898de40ea31499060600160405180910390a150506001600055505050565b6005546040516331a9108f60e11b815260048101839052829133916001600160a01b0390911690636352211e9060240160206040518083038186803b15801561074d57600080fd5b505afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107859190611571565b6001600160a01b031614156108e35781600160008281526001602052604090205415610450576000828152600160208190526040909120805490916107c991611719565b815481106107d9576107d961175c565b906000526020600020906004020160030160019054906101000a900460ff16156108155760405162461bcd60e51b81526004016102f69061169d565b836000808281526003602052604090205460ff16156108765760405162461bcd60e51b815260206004820152601b60248201527f61756374696f6e20666f7220746f6b656e20697320616374697665000000000060448201526064016102f6565b600086815260016020526040902080548061089357610893611746565b60008281526020812060046000199093019283020180546001600160a01b0319908116825560018201805490911690556002810191909155600301805461ffff1916905590555061092b92505050565b60405162461bcd60e51b815260206004820152601860248201527f6e6f74206f776e6572206f6620676976656e20746f6b656e000000000000000060448201526064016102f6565b5050565b6001602052816000526040600020818154811061094b57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b0392831695509116925060ff8082169161010090041685565b600260005414156109b05760405162461bcd60e51b81526004016102f6906116ca565b600260005580600160008281526001602052604090205415610450576000828152600160208190526040909120805490916109ea91611719565b815481106109fa576109fa61175c565b906000526020600020906004020160030160019054906101000a900460ff1615610a365760405162461bcd60e51b81526004016102f69061169d565b826000808281526003602052604090205460ff1615610a975760405162461bcd60e51b815260206004820152601b60248201527f61756374696f6e20666f7220746f6b656e20697320616374697665000000000060448201526064016102f6565b6000858152600160208190526040822080549091610ab491611719565b81548110610ac457610ac461175c565b60009182526020918290206040805160a081018252600490930290910180546001600160a01b0390811684526001820154169383018490526002810154918301919091526003015460ff8082161515606084015261010090910416151560808201529150331415610b3d57610b3886610705565b610cd4565b8060400151341015610b915760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742066756e64732073656e7400000000000000000060448201526064016102f6565b602081810180516001600160a01b03908116600090815260049384905260409081902080543401905560055492519051632142170760e11b8152908216938101939093523360248401526044830189905216906342842e0e90606401600060405180830381600087803b158015610c0757600080fd5b505af1158015610c1b573d6000803e3d6000fd5b505050600087815260016020819052604090912080543393509091610c3f91611719565b81548110610c4f57610c4f61175c565b6000918252602080832060049290920290910180546001600160a01b0319166001600160a01b039490941693909317909255878152600191829052604090208054610c9b908390611719565b81548110610cab57610cab61175c565b906000526020600020906004020160030160016101000a81548160ff0219169083151502179055505b5050600160005550505050565b606060016000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610d8d5760008481526020908190206040805160a0810182526004860290920180546001600160a01b039081168452600180830154909116848601526002820154928401929092526003015460ff8082161515606085015261010090910416151560808301529083529092019101610d16565b505050509050919050565b60026000541415610dbb5760405162461bcd60e51b81526004016102f6906116ca565b60026000556005546040516331a9108f60e11b815260048101839052829133916001600160a01b0390911690636352211e9060240160206040518083038186803b158015610e0857600080fd5b505afa158015610e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e409190611571565b6001600160a01b031614156108e3578160016000828152600160205260409020541561045057600082815260016020819052604090912080549091610e8491611719565b81548110610e9457610e9461175c565b906000526020600020906004020160030160019054906101000a900460ff1615610ed05760405162461bcd60e51b81526004016102f69061169d565b83600160008281526003602052604090205460ff16610f315760405162461bcd60e51b815260206004820152601f60248201527f61756374696f6e20666f7220746f6b656e206973206e6f74206163746976650060448201526064016102f6565b600086815260026020819052604090912080549101546001600160a01b0390811691161415610f7e576000868152600360205260409020805460ff19169055610f7986610705565b6110cf565b6000868152600360209081526040808320805460ff191690556001918290529091208054610fad908390611719565b81548110610fbd57610fbd61175c565b6000918252602080832060036004909302019190910180549315156101000261ff00199094169390931790925587815260028252604080822060019081015493529020805460001981019081106110165761101661175c565b600091825260208083206004928302016002908101949094558983528381526040808420600181015481546001600160a01b0390811687528585528387208054909201909155600554958d90529286905280549501549051632142170760e11b81529482169285019290925290811660248401526044830189905216906342842e0e90606401600060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b505050505b600086815260026020818152604080842080546001600160a01b03199081168255600182018690559381018054909416909355600390920183905560055482516001600160a01b0390911681529081018990528082018390526060810192909252517f6077d5daa03b2cdc6853f63799807cb5ba9521d89b199c4050a463f60b99e8df9181900360800190a15050505050506001600055565b6005546040516331a9108f60e11b815260048101859052849133916001600160a01b0390911690636352211e9060240160206040518083038186803b1580156111b057600080fd5b505afa1580156111c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e89190611571565b6001600160a01b031614156108e3578360008082815260016020526040902054156112985760008281526001602081905260409091208054909161122b91611719565b8154811061123b5761123b61175c565b906000526020600020906004020160030160019054906101000a900460ff166112985760405162461bcd60e51b815260206004820152600f60248201526e1d1bdad95b881a5cc81b1a5cdd1959608a1b60448201526064016102f6565b600085116112e85760405162461bcd60e51b815260206004820152601c60248201527f7072696365206d7573742062652067726561746572207468616e20300000000060448201526064016102f6565b60055460405163e985e9c560e01b81523360048201523060248201526001600160a01b039091169063e985e9c59060440160206040518083038186803b15801561133157600080fd5b505afa158015611345573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611369919061158e565b6113b55760405162461bcd60e51b815260206004820152601960248201527f636f6e7472616374206d75737420626520617070726f7665640000000000000060448201526064016102f6565b6040805160a08101825230815233602080830191825282840189815288158015606086019081526000608087018181528e825260018087529882208054808b01825590835295909120875160049096020180546001600160a01b039687166001600160a01b03199182161782559651988101805499909616989096169790971790935590516002840155905160039092018054945115156101000261ff00199315159390931661ffff199095169490941791909117909255906115445760006114814262015180611701565b6020838101805160008c8152600280855260409182902080546001600160a01b03199081166001600160a01b03958616178255838a01516001830181905595519190920180549092169084161790556005548151921682529281018c905291820152606081018290529091507f323971aba44fdb3378df3f4d54cad741c4c49c76f9d5cb459dd61cc483607ad39060800160405180910390a1600088815260026020908152604080832060039081019490945592905220805460ff191660011790555b50505050505050565b60006020828403121561155f57600080fd5b813561156a81611772565b9392505050565b60006020828403121561158357600080fd5b815161156a81611772565b6000602082840312156115a057600080fd5b815161156a8161178a565b6000602082840312156115bd57600080fd5b5035919050565b600080604083850312156115d757600080fd5b50508035926020909101359150565b6000806000606084860312156115fb57600080fd5b833592506020840135915060408401356116148161178a565b809150509250925092565b602080825282518282018190526000919060409081850190868401855b8281101561169057815180516001600160a01b039081168652878201511687860152858101518686015260608082015115159086015260809081015115159085015260a0909301929085019060010161163c565b5091979650505050505050565b6020808252601390820152721d1bdad95b881a5cc81b9bdd081b1a5cdd1959606a1b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000821982111561171457611714611730565b500190565b60008282101561172b5761172b611730565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461178757600080fd5b50565b801515811461178757600080fdfea2646970667358221220c0b7e7fe41425667d1212a3dbd89cb55babbfbf22d97606a6cf7c6864a6791f364736f6c63430008070033";

type DeltTraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeltTraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeltTrader__factory extends ContractFactory {
  constructor(...args: DeltTraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _contractAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeltTrader> {
    return super.deploy(_contractAddr, overrides || {}) as Promise<DeltTrader>;
  }
  override getDeployTransaction(
    _contractAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contractAddr, overrides || {});
  }
  override attach(address: string): DeltTrader {
    return super.attach(address) as DeltTrader;
  }
  override connect(signer: Signer): DeltTrader__factory {
    return super.connect(signer) as DeltTrader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeltTraderInterface {
    return new utils.Interface(_abi) as DeltTraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeltTrader {
    return new Contract(address, _abi, signerOrProvider) as DeltTrader;
  }
}
