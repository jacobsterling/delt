/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EncodeItem,
  EncodeItemInterface,
} from "../../contracts/EncodeItem";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_attributes",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "itemName",
            type: "string",
          },
          {
            internalType: "string",
            name: "itemType",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "mod",
            type: "uint256",
          },
        ],
        internalType: "struct DeltItems.Id",
        name: "id",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "encodedSVG",
        type: "string",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610dc361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80639f1d15c914610045578063d9c7dcd61461006e575b600080fd5b610058610053366004610820565b610081565b6040516100659190610b33565b60405180910390f35b61005861007c36600461073e565b610205565b606060008360405160200161009691906109e3565b604051602081830303815290604052905060005b83548110156101db57818482815481106100c6576100c6610ca1565b90600052602060002090600302016001018583815481106100e9576100e9610ca1565b906000526020600020906003020160000186848154811061010c5761010c610ca1565b906000526020600020906003020160020160009054906101000a900463ffffffff1661016a88868154811061014357610143610ca1565b6000918252602090912060039091020160020154640100000000900463ffffffff1661026d565b60405160200161017e9594939291906108db565b60408051601f19818403018152919052845490925061019f90600190610bff565b8110156101c957816040516020016101b791906109bd565b60405160208183030381529060405291505b806101d381610c46565b9150506100aa565b50806040516020016101ed9190610998565b60408051808303601f19018152919052949350505050565b60606102458360000151846020015161021d85610396565b876040516020016102319493929190610a0e565b60405160208183030381529060405261054b565b6040516020016102559190610aee565b60405160208183030381529060405290509392505050565b6060816102915750506040805180820190915260018152600360fc1b602082015290565b8160005b81156102bb57806102a581610c46565b91506102b49050600a83610bcc565b9150610295565b60008167ffffffffffffffff8111156102d6576102d6610cb7565b6040519080825280601f01601f191660200182016040528015610300576020820181803683370190505b509050815b851561038d57610316600182610bff565b90506000610325600a88610bcc565b61033090600a610be0565b61033a9088610bff565b610345906030610ba7565b905060008160f81b90508084848151811061036257610362610ca1565b60200101906001600160f81b031916908160001a905350610384600a89610bcc565b97505050610305565b50949350505050565b805160609082906103b7575050604080516000815260208101909152919050565b600481516103c59190610c61565b156104165760405162461bcd60e51b815260206004820152601c60248201527f696e76616c696420626173653634206465636f64657220696e70757400000000604482015260640160405180910390fd5b60006040518060a0016040528060808152602001610d0e6080913990506000600483516104439190610bcc565b61044e906003610be0565b9050600061045d826020610b8f565b67ffffffffffffffff81111561047557610475610cb7565b6040519080825280601f01601f19166020018201604052801561049f576020820181803683370190505b5090508351840151603d60ff821614156104ce57600183039250613d3d61ffff821614156104ce576001830392505b50818152600183018485518101602084015b8183101561053d57600483019250825160ff8082168601511660ff808360081c168701511660061b0160ff808360101c1687015116600c1b60ff808460181c168801511660121b010190508060e81b8252506003810190506104e0565b509298975050505050505050565b606081516000141561056b57505060408051602081019091526000815290565b6000604051806060016040528060408152602001610cce604091399050600060038451600261059a9190610b8f565b6105a49190610bcc565b6105af906004610be0565b905060006105be826020610b8f565b67ffffffffffffffff8111156105d6576105d6610cb7565b6040519080825280601f01601f191660200182016040528015610600576020820181803683370190505b509050818152600183018586518101602084015b8183101561066c576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610614565b6003895106600181146106865760028114610697576106a3565b613d3d60f01b6001198301526106a3565b603d60f81b6000198301525b509398975050505050505050565b600082601f8301126106c257600080fd5b813567ffffffffffffffff808211156106dd576106dd610cb7565b604051601f8301601f19908116603f0116810190828211818310171561070557610705610cb7565b8160405283815286602085880101111561071e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561075357600080fd5b833567ffffffffffffffff8082111561076b57600080fd5b610777878388016106b1565b9450602086013591508082111561078d57600080fd5b90850190606082880312156107a157600080fd5b6107a9610b66565b8235828111156107b857600080fd5b6107c4898286016106b1565b8252506020830135828111156107d957600080fd5b6107e5898286016106b1565b60208301525060409283013583820152935090850135908082111561080957600080fd5b50610816868287016106b1565b9150509250925092565b6000806040838503121561083357600080fd5b50508035926020909101359150565b8054600090600181811c908083168061085c57607f831692505b602080841082141561087e57634e487b7160e01b600052602260045260246000fd5b81801561089257600181146108a3576108cf565b60ff198616895284890196506108cf565b876000528160002060005b868110156108c75781548b8201529085019083016108ae565b505084890196505b50505050505092915050565b600086516108ed818460208b01610c16565b601160f91b9083019081526109056001820188610842565b6d111d10103d913232b9b1911d101160911b81529050610928600e820187610842565b6c11161010113a34b2b9111d101160991b815260e086901b6001600160e01b031916600d8201526c011161010113b30b63ab2911d1609d1b6011820152845190915061097b81601e840160208801610c16565b607d60f81b601e9290910191820152601f01979650505050505050565b600082516109aa818460208701610c16565b607d60f81b920191825250600101919050565b600082516109cf818460208701610c16565b61016160f51b920191825250600201919050565b601160f91b815260006109f96001830184610842565b64223a20207b60d81b81526005019392505050565b693d913730b6b2911d101160b11b81528451600090610a3481600a850160208a01610c16565b70111610101134ba32b6aa3cb832911d101160791b600a918401918201528551610a6581601b840160208a01610c16565b6d111610101134b6b0b3b2911d101160911b601b92909101918201528451610a94816029840160208901610c16565b630111610160e51b602992909101918201526e2261747472696275746573223a207b60881b602d8201528351610ad181603c840160208801610c16565b617d7d60f01b603c9290910191820152603e019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610b2681601d850160208701610c16565b91909101601d0192915050565b6020815260008251806020840152610b52816040850160208701610c16565b601f01601f19169190910160400192915050565b6040516060810167ffffffffffffffff81118282101715610b8957610b89610cb7565b60405290565b60008219821115610ba257610ba2610c75565b500190565b600060ff821660ff84168060ff03821115610bc457610bc4610c75565b019392505050565b600082610bdb57610bdb610c8b565b500490565b6000816000190483118215151615610bfa57610bfa610c75565b500290565b600082821015610c1157610c11610c75565b500390565b60005b83811015610c31578181015183820152602001610c19565b83811115610c40576000848401525b50505050565b6000600019821415610c5a57610c5a610c75565b5060010190565b600082610c7057610c70610c8b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000a2646970667358221220eb9a7bc40e7d173dd1729bde0e213734620bc54ad60919ed5b0bde3e8e3997c064736f6c63430008070033";

type EncodeItemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncodeItemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EncodeItem__factory extends ContractFactory {
  constructor(...args: EncodeItemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EncodeItem> {
    return super.deploy(overrides || {}) as Promise<EncodeItem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EncodeItem {
    return super.attach(address) as EncodeItem;
  }
  override connect(signer: Signer): EncodeItem__factory {
    return super.connect(signer) as EncodeItem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncodeItemInterface {
    return new utils.Interface(_abi) as EncodeItemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EncodeItem {
    return new Contract(address, _abi, signerOrProvider) as EncodeItem;
  }
}
